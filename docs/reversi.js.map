{"version":3,"sources":["../node_modules/board2d/dist/pos/pos.js","../node_modules/board2d/dist/board/board.js","../node_modules/board2d/dist/index.js","index.ts"],"names":["Pos","constructor","x","y","add","pos","addXY","addDirection","direction","createFromDirection","createFromPos","Direction","up","down","right","left","upRight","upLeft","downRight","downLeft","Error","PosMutable","__classPrivateFieldSet","receiver","privateMap","value","has","TypeError","set","__classPrivateFieldGet","get","_poses","_boardCore","BoardCore","xSize","ySize","values","Array","fill","map","_","__","forEach","callback","getValue","getValueFromXY","getValueWithXY","undefined","length","exists","some","check","find","findAll","result","push","getFromDrection","getValueWithDirection","p","v","indexToPos","index","Math","floor","posToIndex","copy","WeakMap","Board","boardCore","skipCopy","put","newBoardCore","putFromXY","putWithXY","toMutable","BoardMutable","empty","toImmutable","version"],"mappings":"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","file":"reversi.js","sourceRoot":"../src","sourcesContent":["/**\n * Position on the board (immutable)\n */\nexport class Pos {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    add(pos) {\n        return this.addXY(pos.x, pos.y);\n    }\n    addXY(x, y) {\n        return new Pos(this.x + x, this.y + y);\n    }\n    /**\n     *  Get the position moved one step in the specified direction\n     *\n     * If you are currently at (x, y) = (0, 0):\n     * up    is  ( 0, -1)\n     * down  is  ( 0,  1)\n     * right is  ( 1,  0)\n     * left  is  (-1,  0)\n     * @param direction\n     */\n    addDirection(direction) {\n        return this.add(Pos.createFromDirection(direction));\n    }\n    static createFromPos(pos) {\n        return new Pos(pos.x, pos.y);\n    }\n    static createFromDirection(direction) {\n        if (direction == Direction.up) {\n            return new Pos(0, -1);\n        }\n        else if (direction == Direction.down) {\n            return new Pos(0, 1);\n        }\n        else if (direction == Direction.right) {\n            return new Pos(1, 0);\n        }\n        else if (direction == Direction.left) {\n            return new Pos(-1, 0);\n        }\n        else if (direction == Direction.upRight) {\n            return new Pos(1, -1);\n        }\n        else if (direction == Direction.upLeft) {\n            return new Pos(-1, -1);\n        }\n        else if (direction == Direction.downRight) {\n            return new Pos(1, 1);\n        }\n        else if (direction == Direction.downLeft) {\n            return new Pos(-1, 1);\n        }\n        else {\n            throw new Error('unknown direction');\n        }\n    }\n}\n/**\n * Position on the board (mutable)\n *\n * Use of pos class is recommended, but it is used when the processing speed and memory usage efficiency are required.\n */\nexport class PosMutable {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    add(pos) {\n        return this.addXY(pos.x, pos.y);\n    }\n    addXY(x, y) {\n        this.x = this.x + x;\n        this.y = this.y + y;\n        return this;\n    }\n    addDirection(direction) {\n        return this.add(Pos.createFromDirection(direction));\n    }\n    static createFromPos(pos) {\n        return new PosMutable(pos.x, pos.y);\n    }\n}\nexport var Direction;\n(function (Direction) {\n    Direction[Direction[\"up\"] = 0] = \"up\";\n    Direction[Direction[\"down\"] = 1] = \"down\";\n    Direction[Direction[\"left\"] = 2] = \"left\";\n    Direction[Direction[\"right\"] = 3] = \"right\";\n    Direction[Direction[\"upLeft\"] = 4] = \"upLeft\";\n    Direction[Direction[\"upRight\"] = 5] = \"upRight\";\n    Direction[Direction[\"downLeft\"] = 6] = \"downLeft\";\n    Direction[Direction[\"downRight\"] = 7] = \"downRight\";\n})(Direction || (Direction = {}));\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _poses, _boardCore;\nimport { Pos } from '../pos/pos';\nexport class BoardCore {\n    /**\n     * Create with board size.\n     */\n    constructor(xSize, ySize) {\n        this.xSize = xSize;\n        this.ySize = ySize;\n        _poses.set(this, void 0);\n        this.values = new Array(ySize).fill(null).map(_ => new Array(xSize).fill(null));\n        __classPrivateFieldSet(this, _poses, new Array(ySize).fill(null).map((_, y) => new Array(xSize).fill(null).map((__, x) => new Pos(x, y))));\n    }\n    forEach(callback) {\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                callback(__classPrivateFieldGet(this, _poses)[y][x], this.values[y][x]);\n            }\n        }\n    }\n    getValue(pos) {\n        return this.getValueFromXY(pos.x, pos.y);\n    }\n    /**\n     * @deprecated\n     * @ignore\n     */\n    getValueFromXY(x, y) {\n        return this.getValueWithXY(x, y);\n    }\n    getValueWithXY(x, y) {\n        if (x < 0 || y < 0) {\n            return undefined;\n        }\n        if (this.values.length <= y || this.values[0].length <= x) {\n            return undefined;\n        }\n        return this.values[y][x];\n    }\n    exists(pos) {\n        return this.getValue(pos) !== null && this.getValue(pos) !== undefined;\n    }\n    some(check) {\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                if (check(__classPrivateFieldGet(this, _poses)[y][x], this.values[y][x])) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    find(check) {\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                if (check(__classPrivateFieldGet(this, _poses)[y][x], this.values[y][x])) {\n                    return { pos: __classPrivateFieldGet(this, _poses)[y][x], value: this.values[y][x] };\n                }\n            }\n        }\n        return null;\n    }\n    findAll(check) {\n        var result = [];\n        for (var y = 0; y < this.ySize; y++) {\n            for (var x = 0; x < this.xSize; x++) {\n                if (check(__classPrivateFieldGet(this, _poses)[y][x], this.values[y][x])) {\n                    result.push({\n                        pos: __classPrivateFieldGet(this, _poses)[y][x],\n                        value: this.values[y][x]\n                    });\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @deprecated\n     * @ignore\n     */\n    getFromDrection(pos, direction) {\n        return this.getValueWithDirection(pos, direction);\n    }\n    getValueWithDirection(pos, direction) {\n        var p = Pos.createFromPos(pos).addDirection(direction);\n        var v = this.getValue(p);\n        if (v === undefined) {\n            return undefined;\n        }\n        return {\n            pos: p,\n            value: v\n        };\n    }\n    indexToPos(index) {\n        if (index < 0 || index >= this.xSize * this.ySize) {\n            throw new Error('out of index');\n        }\n        return new Pos(index % this.xSize, Math.floor(index / this.xSize));\n    }\n    posToIndex(pos) {\n        if (pos.x < 0 || pos.x >= this.xSize || pos.y < 0 || pos.y >= this.ySize) {\n            throw new Error('out of index');\n        }\n        return pos.y * this.xSize + pos.x;\n    }\n    copy() {\n        var result = new BoardCore(this.xSize, this.ySize);\n        this.forEach((pos, v) => result.values[pos.y][pos.x] = v);\n        return result;\n    }\n}\n_poses = new WeakMap();\n/**\n * Two-dimensional board\n */\nexport class Board {\n    constructor(boardCore, skipCopy = false) {\n        _boardCore.set(this, void 0);\n        __classPrivateFieldSet(this, _boardCore, skipCopy ? boardCore : boardCore.copy());\n    }\n    get xSize() { return __classPrivateFieldGet(this, _boardCore).xSize; }\n    get ySize() { return __classPrivateFieldGet(this, _boardCore).ySize; }\n    /**\n     * Two-dimensional array as raw data on the board\n     *\n     * @return Return a copy. Updating the returned value does not affect the board.\n     */\n    get values() { return __classPrivateFieldGet(this, _boardCore).copy().values; }\n    /**\n     * Put pieces on the board (immutable)\n     */\n    put(pos, value) {\n        var newBoardCore = __classPrivateFieldGet(this, _boardCore).copy();\n        newBoardCore.values[pos.y][pos.x] = value;\n        return new Board(newBoardCore, true);\n    }\n    /**\n     * @deprecated\n     * @ignore\n     */\n    putFromXY(x, y, value) {\n        return this.put(new Pos(x, y), value);\n    }\n    putWithXY(x, y, value) {\n        return this.put(new Pos(x, y), value);\n    }\n    forEach(callback) {\n        __classPrivateFieldGet(this, _boardCore).forEach(callback);\n    }\n    getValue(pos) {\n        return __classPrivateFieldGet(this, _boardCore).getValue(pos);\n    }\n    /**\n     * @deprecated\n     * @ignore\n     */\n    getValueFromXY(x, y) {\n        return __classPrivateFieldGet(this, _boardCore).getValueWithXY(x, y);\n    }\n    getValueWithXY(x, y) {\n        return __classPrivateFieldGet(this, _boardCore).getValueWithXY(x, y);\n    }\n    exists(pos) {\n        return __classPrivateFieldGet(this, _boardCore).exists(pos);\n    }\n    copy() {\n        return new Board(__classPrivateFieldGet(this, _boardCore).copy());\n    }\n    some(check) {\n        return __classPrivateFieldGet(this, _boardCore).some(check);\n    }\n    find(check) {\n        return __classPrivateFieldGet(this, _boardCore).find(check);\n    }\n    findAll(check) {\n        return __classPrivateFieldGet(this, _boardCore).findAll(check);\n    }\n    /**\n     * @deprecated\n     * @ignore\n     */\n    getFromDrection(pos, direction) {\n        return __classPrivateFieldGet(this, _boardCore).getValueWithDirection(pos, direction);\n    }\n    getValueWithDirection(pos, direction) {\n        return __classPrivateFieldGet(this, _boardCore).getValueWithDirection(pos, direction);\n    }\n    indexToPos(index) {\n        return __classPrivateFieldGet(this, _boardCore).indexToPos(index);\n    }\n    posToIndex(pos) {\n        return __classPrivateFieldGet(this, _boardCore).posToIndex(pos);\n    }\n    toMutable() {\n        return new BoardMutable(__classPrivateFieldGet(this, _boardCore));\n    }\n    static empty(xSize, ySize) {\n        return new Board(new BoardCore(xSize, ySize), true);\n    }\n}\n_boardCore = new WeakMap();\n/**\n * Use of Board class is recommended, but it is used when the processing speed and memory usage efficiency are required.\n */\nexport class BoardMutable {\n    constructor(boardCore, skipCopy = false) {\n        this.boardCore = skipCopy ? boardCore : boardCore.copy();\n    }\n    get xSize() { return this.boardCore.xSize; }\n    get ySize() { return this.boardCore.ySize; }\n    /**\n     * Put pieces on the board (mutable)\n     */\n    put(pos, value) {\n        this.boardCore.values[pos.y][pos.x] = value;\n        return this;\n    }\n    forEach(callback) {\n        this.boardCore.forEach(callback);\n    }\n    getValue(pos) {\n        return this.boardCore.getValue(pos);\n    }\n    /**\n     * @deprecated\n     * @ignore\n     */\n    getValueFromXY(x, y) {\n        return this.boardCore.getValueWithXY(x, y);\n    }\n    getValueWithXY(x, y) {\n        return this.boardCore.getValueWithXY(x, y);\n    }\n    exists(pos) {\n        return this.boardCore.exists(pos);\n    }\n    copy() {\n        return new Board(this.boardCore.copy());\n    }\n    some(check) {\n        return this.boardCore.some(check);\n    }\n    find(check) {\n        return this.boardCore.find(check);\n    }\n    findAll(check) {\n        return this.boardCore.findAll(check);\n    }\n    /**\n     * @deprecated\n     * @ignore\n     */\n    getFromDrection(pos, direction) {\n        return this.boardCore.getValueWithDirection(pos, direction);\n    }\n    getValueWithDirection(pos, direction) {\n        return this.boardCore.getValueWithDirection(pos, direction);\n    }\n    indexToPos(index) {\n        return this.boardCore.indexToPos(index);\n    }\n    posToIndex(pos) {\n        return this.boardCore.posToIndex(pos);\n    }\n    static empty(xSize, ySize) {\n        return new BoardMutable(new BoardCore(xSize, ySize), true);\n    }\n    toImmutable() {\n        return new Board(this.boardCore);\n    }\n}\n","/**\n * 盤ライブラリ\n * バージョン: 1.1.1\n */\nexport const version = '1.1.1';\nexport * from './pos/pos';\nexport * from './board/board';\n","import * as board2d from 'board2d';\n\nexport {\n  Board,\n  BoardMutable,\n  Pos,\n  Direction,\n  X,\n  Y\n} from 'board2d';\n\n/**\n * Reversi game class\n * \n * entry point\n */\nexport class Game {\n  /**\n   * \n   * Use `Game.init ()` instead of the constructor to start the game.\n   * \n   * @param turn\n   * @param board\n   * @param winner null if no win or loss has been decide\n   * @param _eventList history\n   */\n  constructor(\n    readonly turn: Disk, \n    readonly board: board2d.Board<Disk>, \n    readonly winner: Disk | null = null, \n    private readonly _eventList: Event[] = []\n  ) {}\n\n  /**\n   * Start the game\n   */\n  static init(): Game {\n    var board = board2d.BoardMutable.empty<Disk>(8, 8)\n      .put(new board2d.Pos(3 as board2d.X, 3 as board2d.Y), Disk.light)\n      .put(new board2d.Pos(4 as board2d.X, 3 as board2d.Y), Disk.dark)\n      .put(new board2d.Pos(3 as board2d.X, 4 as board2d.Y), Disk.dark)\n      .put(new board2d.Pos(4 as board2d.X, 4 as board2d.Y), Disk.light)\n      .toImmutable();\n    return new Game(\n      Disk.light,\n      board\n    )\n  }\n\n  get score(): Score {\n    var lightCount = 0;\n    var darkCount = 0;\n    this.board.forEach((pos, disk) => {\n      if(disk === Disk.light) {\n        lightCount++;\n      }\n      if(disk === Disk.dark) {\n        darkCount++;\n      }\n    })\n    return new Score(lightCount, darkCount);\n  }\n\n  /**\n   * Whether the win or loss has been decided\n   */\n  get isGameOver(): boolean {\n    return this.winner != null;\n  }\n\n  getTunableDiskPosList(pos: board2d.PosReadable, disk: Disk): board2d.Pos[] {\n    if(this.isPlaced(pos)) {\n      return []\n    }\n\n    const direction8 = [\n      board2d.Direction.up,\n      board2d.Direction.down,\n      board2d.Direction.right,\n      board2d.Direction.left,\n      board2d.Direction.upRight,\n      board2d.Direction.upLeft,\n      board2d.Direction.downRight,\n      board2d.Direction.downLeft\n    ].map(v => board2d.Pos.createFromDirection(v));\n\n    return direction8.map(d => {\n      var currentPos = d.add(pos);\n      var result: board2d.Pos[] = [];\n      var i = 0;\n      while(this.isPlaced(currentPos) && this.board.getValue(currentPos) !== disk) {\n        result.push(currentPos);\n        currentPos = currentPos.add(d);\n        i++;\n        if(i > 20) throw new Error(\"infinite loop\");\n      }\n      return this.board.getValue(currentPos) === disk ? result : []\n    }).reduce((memo, list) => memo.concat(list), [])\n  }\n\n  getTunableDiskPosListFromXY(x: board2d.X, y: board2d.Y, disk: Disk): board2d.Pos[] {\n    return this.getTunableDiskPosList(new board2d.Pos(x, y), disk);\n  }\n\n  /**\n   * Whether the disk is placed in the passed position\n   * @param pos \n   */\n  isPlaced(pos: board2d.PosReadable): boolean {\n    return this.board.exists(pos);\n  }\n\n  /**\n   * Whether the disk is placed in the passed position\n   * @param x \n   * @param y \n   */\n  isPlacedFromXY(x: board2d.X, y: board2d.Y): boolean {\n    return this.isPlaced(new board2d.Pos(x, y));\n  }\n\n  /**\n   * Place a disk  \n   * \n   * The result is returned in callback.\n   * Conditions that cause an error in callback\n   * - The type of disk and the turn do not match\n   * - The position where the disk cannot be placed is specified\n   * @param pos \n   * @param disk \n   * @param callback \n   */\n  placeDisk(pos: board2d.Pos, disk: Disk, callback: (e: Error | null, game?: Game)=>void) {\n    if(this.turn != disk) {\n      callback(new Error('The turn is different'));\n      return;\n    }\n\n    var list = this.getTunableDiskPosList(pos, disk);\n    if(list.length == 0) {\n      callback(new Error('Cannot be placed'));\n      return;\n    }\n    var newBoard: board2d.BoardMutable<Disk> = this.board.toMutable();\n    newBoard.put(pos, disk);\n    list.forEach(p => newBoard.put(p, disk));\n    newBoard.toImmutable();\n    var newEventList = [...this._eventList, new Event(pos, disk)]\n\n    var nextTurn = this.turn == Disk.light ? Disk.dark : Disk.light;\n    var winner = null;\n    var preGame = new Game(nextTurn, newBoard.toImmutable(), winner, newEventList);\n    if(preGame.hasTurnableDiskPos(nextTurn)) {\n      callback(null, preGame);\n      return;\n    } else if(preGame.hasTurnableDiskPos(this.turn)) {\n      callback(null, new Game(this.turn, newBoard.toImmutable(), winner, newEventList));\n      return;\n    } else { // winner decided\n      callback(null, new Game(nextTurn, newBoard.toImmutable(), preGame.score.winner, newEventList));\n      return;\n    }\n  }\n\n  /**\n   * Is there a place to put the disk?\n   */\n  hasTurnableDiskPos(disk: Disk): boolean {\n    return this.board.some((pos, _) => this.getTunableDiskPosList(pos, disk).length > 0)\n  }\n\n  /**\n   * Place a disk with x and y\n   * @param x \n   * @param y \n   * @param disk \n   * @param callback \n   */\n  placeDiskFromXY(x: board2d.X, y: board2d.Y, disk: Disk, callback: (e: Error | null, game?: Game)=>void) {\n    return this.placeDisk(new board2d.Pos(x, y), disk, callback);\n  }\n\n  /**\n   * Convert board to string (for debugging)\n   * @param board \n   */\n  static boardToString(board: board2d.Board<Disk>): string {\n    return board.toMutable().boardCore.values.map(row => row.map(v => v || '_').join('')).join('\\n')\n  }\n}\n\nexport enum Disk {\n  light = 'l',\n  dark = 'd'\n}\n\nclass Event {\n  constructor(readonly pos: board2d.Pos, readonly disk: Disk) {\n\n  }\n}\n\nclass Score {\n  constructor(readonly lightCount: number, readonly darkCount: number) {\n  }\n\n  getDiskCount(disk: Disk): number {\n    return disk === Disk.light ? this.lightCount : this.darkCount;\n  }\n\n  get winner(): Disk | null {\n    if(this.lightCount == this.darkCount) {\n      return null; // draw\n    }\n    return this.lightCount > this.darkCount ? Disk.light : Disk.dark;\n  }\n}\n"]}